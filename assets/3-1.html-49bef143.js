import{_ as e,o as a,c as s,b as n}from"./app-993707ff.js";const i={},r=n(`<h2 id="语言基础" tabindex="-1"><a class="header-anchor" href="#语言基础" aria-hidden="true">#</a> 语言基础</h2><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h3><h4 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h4><p>1、一切都区分大小写</p><p>2、标识符第一个字符必须为一个字母、下划线（_）或美元符号（$）；其他字符可以是字母、下划线、美元符号或数字。关键字、保留字、true、false和null不能作为标识符。</p><p>3、单行注释和块注释</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 单行注释</span>
<span class="token comment">/* 块注释
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、严格模式：ECMAScript 3的一些不规范写法在这种模式下会被处理，对于不安全的活动将抛出错误。</p><p>启用：在脚本开头加上&quot;use strict&quot;，也可以放到函数体开头，单独指定一个函数在严格模式下执行</p><p>5、语句末尾分号不必须</p>`,10),t=[r];function c(d,l){return a(),s("div",null,t)}const p=e(i,[["render",c],["__file","3-1.html.vue"]]);export{p as default};
