import{_ as e,o,c as d,b as c}from"./app-ac6c5431.js";const a={},i=c('<h1 id="事件实现原理" tabindex="-1"><a class="header-anchor" href="#事件实现原理" aria-hidden="true">#</a> 事件实现原理</h1><h2 id="事件机制组成" tabindex="-1"><a class="header-anchor" href="#事件机制组成" aria-hidden="true">#</a> 事件机制组成</h2><p>事件实现通过发布订阅模式来实现</p><ul><li>事件源（发布者）：事件的发送者</li><li>事件（订阅中心）：事件源发出的一种信息或状态</li><li>事件监听者（订阅者）：对事件做出反应的对象。一般是一个函数，当事件发送时调用此函数</li></ul><h2 id="web端dom事件" tabindex="-1"><a class="header-anchor" href="#web端dom事件" aria-hidden="true">#</a> web端Dom事件</h2><p>一类：dom节点通过onclick绑定事件，通过dom.onclick = null来解绑事件；</p><p>二类：dom节点通过**addEventListener()<strong>方法注册事件，通过</strong>removeEventListener()**来注销事件；</p><p>三类：<strong>CSS中</strong>设置ui事件，比如：hover事件，焦点事件(input框)等；</p><blockquote><p>三类补充</p><p>UI事件，当用户与页面上的元素交互时触发，如：<code>load</code>、<code>scroll</code></p><p>焦点事件，当元素获得或失去焦点时触发，如：<code>blur</code>、<code>focus</code></p><p>鼠标事件，当用户通过鼠标在页面执行操作时触发如：<code>dbclick</code>、<code>mouseup</code></p><p>滚轮事件，当使用鼠标滚轮或类似设备时触发，如：<code>mousewheel</code></p><p>文本事件，当在文档中输入文本时触发，如：<code>textInput</code></p><p>键盘事件，当用户通过键盘在页面上执行操作时触发，如：<code>keydown</code>、<code>keypress</code></p><p>合成事件，当为IME（输入法编辑器）输入字符时触发，如：<code>compositionstart</code></p><p>变动事件，当底层DOM结构发生变化时触发，如：<code>DOMsubtreeModified</code></p></blockquote><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献" aria-hidden="true">#</a> 参考文献</h2><p>https://www.cnblogs.com/snsart/p/10881168.html</p>',11),t=[i];function n(r,s){return o(),d("div",null,t)}const h=e(a,[["render",n],["__file","shijianshixianyuanli.html.vue"]]);export{h as default};
