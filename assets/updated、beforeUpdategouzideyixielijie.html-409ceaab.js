import{_ as e,o as a,c as d,b as t}from"./app-c2658f0f.js";const r={},o=t('<h1 id="updated、beforeupdate钩子的一些理解" tabindex="-1"><a class="header-anchor" href="#updated、beforeupdate钩子的一些理解" aria-hidden="true">#</a> updated、beforeUpdate钩子的一些理解</h1><h2 id="钩子基础" tabindex="-1"><a class="header-anchor" href="#钩子基础" aria-hidden="true">#</a> 钩子基础</h2><p>beforeUpdate触发：在页面更新渲染完成后，DOM树更新前被调用</p><p>updated触发：在页面DOM树更新后被调用。（父组件的更新钩子将在其子组件的更新钩子之后调用）</p><blockquote><p>需要注意的是如果只是改变了DOM中的数据（data），未对页面造成任何影响，就不会触发beforeUpdate,updated方法。</p></blockquote><h2 id="在updated里改变数据会引发该回调的循环吗" tabindex="-1"><a class="header-anchor" href="#在updated里改变数据会引发该回调的循环吗" aria-hidden="true">#</a> 在<strong>updated</strong>里改变数据会引发该回调的循环吗？</h2><p>若在updated中，字段赋的值为固定值，第一次赋值会触发updated、beforeUpdate；</p><p>如果是自增这种，程序就会陷入死循环。</p>',8),p=[o];function i(u,c){return a(),d("div",null,p)}const h=e(r,[["render",i],["__file","updated、beforeUpdategouzideyixielijie.html.vue"]]);export{h as default};
